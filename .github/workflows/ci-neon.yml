name: ci-neon

on:
  workflow_dispatch:
  schedule:
    # Uwaga: GitHub cron jest w UTC. 02:30 UTC ~ 04:30 czasu PL (CEST).
    - cron: "30 2 * * *"

jobs:
  migrate-test-snapshot:
    runs-on: ubuntu-latest
    env:
      NEON_CS_URL: ${{ secrets.NEON_CS_URL }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install psql
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Show DB target (masked)
        run: |
          echo "Target: ${NEON_CS_URL%:*/*}/* (masked)"

      - name: Make migration script executable
        run: chmod +x ./scripts/psql-migrate.sh

      - name: Run migrations on Neon
        run: ./scripts/psql-migrate.sh "$NEON_CS_URL"

      # (opcjonalnie) seed dodatkowy na dany dzień — jeśli chcesz nadpisać dane
      # - name: (Optional) Re-seed daily
      #   run: psql "$NEON_CS_URL" -v "ON_ERROR_STOP=1" -f ./db/catering_seed_postgres.sql

      - name: Build solution
        run: dotnet build catering-backend.sln -c Release --no-restore

      - name: Unit tests
        run: dotnet test ./tests/Unit -c Release

      - name: Integration tests (Neon)
        env:
          ConnectionStrings__Default: ${{ env.NEON_CS_URL }}
        run: dotnet test ./tests/Integration -c Release

      - name: E2E tests (Neon)
        env:
          ConnectionStrings__Default: ${{ env.NEON_CS_URL }}
        run: dotnet test ./tests/E2E -c Release

      - name: Snapshot (pg_dump custom format)
        run: |
          TIMESTAMP=$(date -u +"%Y%m%dT%H%M%SZ")
          F="neon_snapshot_${TIMESTAMP}.dump"
          pg_dump --no-owner --if-exists -Fc "$NEON_CS_URL" -f "$F"
          echo "SNAPSHOT_FILE=$F" >> $GITHUB_ENV

      - name: Upload snapshot artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SNAPSHOT_FILE }}
          path: ${{ env.SNAPSHOT_FILE }}
          retention-days: 7
